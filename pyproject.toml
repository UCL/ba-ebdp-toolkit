[project]
name = "ebdp-toolkit"
version = "0.3.0"
description = "describe"
readme = "README.md"
requires-python = ">=3.10, <3.14"
license = { text = "AGPL-3.0" }
authors = [{ name = "Gareth Simons", email = "gareth.simons@ucl.ac.uk" }]
maintainers = [{ name = "Gareth Simons", email = "gareth.simons@ucl.ac.uk" }]
keywords = [
  "network-topology",
  "architecture",
  "urban-planning",
  "python3",
  "networkx",
  "networks",
  "spatial-analysis",
  "geographical-information-system",
  "spatial-data",
  "morphometrics",
  "network-analysis",
  "spatial-data-analysis",
  "centrality",
  "shapely",
  "landuse",
  "network-centralities",
]
classifiers = [
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "geopandas>=1.0.1",
  "networkx>=3.1",
  "pandas>=2.0.3",
  "shapely>=2.0.6",
  "tqdm>=4.65.0",
  "asyncpg>=0.28.0",
  "python-dotenv>=1.0.0",
  "pyproj>=3.6.1",
  "sqlalchemy>=2.0.19",
  "geoalchemy2>=0.14.1",
  "cityseer>=4.18.1",
  "rasterio>=1.3.8",
  "rasterstats>=0.19.0",
  "momepy>=0.9.0",
  "matplotlib>=3.8.0",
  "osmnx>=1.6.0",
  "fiona>=1.9.5",
  "scipy>=1.11.3",
  "seaborn>=0.13.2",
  "overturemaps>=0.10.0",
  "psycopg[binary]>=3.2.1",
]

[tool.uv]
dev-dependencies = [
  "pyright>=1.1.320",
  "pytest>=7.4.0",
  "pip>=23.2.1",
  "pandas-stubs>=2.0.2.230605",
  "jupyterlab>=3.5.2",
  "jupyter>=1.0.0",
  "ipykernel>=6.25.1",
  "ruff>=0.5.1",
  "pyright>=1.1.380",
  "poethepoet>=0.29.0",
]

[tool.ruff]
line-length = 120
indent-width = 4
extend-exclude = ["deprecated"]

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.pyright]
pythonVersion = "3.10"
include = ["src"]
exclude = [
  "**/__pycache__",
  "**/__pypackages__",
  "build",
  "docs",
  "**/temp/",
  "tests/",
  "dist",
  ".venv",
]
typeCheckingMode = "basic"

[tool.pytest.ini_options]
console_output_style = "count"
log_cli = true
log_cli_level = "INFO"
testpaths = ["tests"]
addopts = ""

[tool.pdm.resolution]
allow-prereleases = false

[tool.poe.tasks]
verify_project = { shell = "ruff format && ruff check && pyright . && pytest ./tests" }
